name: Create autoreg security event
testcases:
- name: get_login_token
  steps:
  - type: get_login_token

- name: create_security_event
  steps:
  - type: http
    method: POST
    url: '{{.pfserver_webadmin_url}}/api/v1/config/security_events'
    ignore_verify_ssl: true
    body: >-
      {
        "id": "{{.security_event_autoreg.event.id}}",
        "access_duration": "{{.security_event_autoreg.event.access_duration}}",
        "actions": ["autoreg", "role"],
        "desc": "{{.security_event_autoreg.event.desc}}",
        "enabled": "Y",
        "target_category": "{{.mac_auth.roles.headless_device.id}}",
        "triggers": [{
          "dhcp_fingerprint": "{{.security_event_autoreg.node.dhcp_fingerprint_id}}"
        }],
        "whitelisted_roles": []
      }
    headers:
      "Content-Type": "application/json"
      "Authorization": "{{.get_login_token.json.result.token}}"
    assertions:
      - result.statuscode ShouldEqual 201

- name: calculate_unregdate_should_be_after
  steps:
  - type: exec
    script: 'date +"%Y-%m-%dT%H:%M:%S+00:00" -d "5 days" > /tmp/calculate_unregdate_should_be_after.txt'
  
- name: clear_fingerbank_cache
  steps:
  - type: pfcmd_run_command
    command: 'cache fingerbank clear'
