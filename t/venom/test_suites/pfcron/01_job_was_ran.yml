name: Pfcron
testcases:
- name: setup_pfcron_and_mock_servers
  steps:
  - type: systemctl_service_stop
    service: 'packetfence-pfcron'

  - type: exec
    script: 'cp "{{.fingerbank_upstream_db}}" "{{.fingerbank_upstream_db}}.bak"'

  - type: exec
    script: 'cp "{{.pfserver_root_dir}}/t/data/pfcron-test.conf.test" "{{.pfserver_conf_dir}}/pfcron.conf"'

  - type: exec
    script: '{{.ini_cmd}} {{.fingerbank_conf_dir}}/fingerbank.conf add upstream host {{.fingerbank_host}} upstream port {{.fingerbank_port}} upstream use_https disabled'

  - type: pfcmd_configreload

  - type: exec
    script: 'rm -f /tmp/pfcron-test.log'

  - type: exec
    script: '{{.pfserver_test_dir}}/mock_servers/fingerbank.pl prefork -P {{.fingerbank_api_mock_pidfile}} -w 1 -s 1'

  - type: systemctl_service_start
    service: 'packetfence-pfcron'

- name: check_pfcron_run_correctly
  steps:
  - type: exec
    script: 'sleep 6'

  - type: exec
    script: 'cat /tmp/pfcron-test.log'
    assertions:
    - result.systemout ShouldContainSubstring bob

  - type: exec
    script: 'sleep 6'

  - type: exec
    script: 'cat /tmp/pfcron-test.log'
    assertions:
    - result.systemout ShouldContainSubstring bobbob

  - type: exec
    script: 'sqlite3 {{.fingerbank_upstream_db}} "SELECT COUNT(*) FROM pf_test"'
    assertions:
    - result.systemout ShouldEqualTrimSpace 1

- name: teardown
  steps:
  - type: systemctl_service_stop
    service: 'packetfence-pfcron'

  - type: exec
    script: 'cp "{{.pfserver_conf_dir}}/pfcron.conf.example" "{{.pfserver_conf_dir}}/pfcron.conf"'

  - type: exec
    script: 'mv "{{.fingerbank_conf_dir}}/fingerbank.conf.bak" "{{.fingerbank_conf_dir}}/fingerbank.conf"'

  - type: exec
    script: 'mv "{{.fingerbank_upstream_db}}.bak" "{{.fingerbank_upstream_db}}"'

  - type: pfcmd_configreload

  - type: exec
    script: 'kill $(cat {{.fingerbank_api_mock_pidfile}})'
