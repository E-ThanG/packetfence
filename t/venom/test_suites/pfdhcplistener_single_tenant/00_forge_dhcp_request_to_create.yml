name: Forge DHCP request to create node10 in DB
testcases:
- name: get_login_token
  steps:
  - type: get_login_token

- name: forge_dhcp_request_node10
  steps:
  - type: exec
    script: "perl {{.pfserver_root_dir}}/addons/stress-tester/dhcp_test --mac={{.pfdhcplistener_single_tenant.nodes.node10.mac}} --ip={{.pfdhcplistener_single_tenant.nodes.node10.first_ip}} --hostname={{.pfdhcplistener_single_tenant.nodes.node10.hostname}} --dhcp-fingerprint={{.pfdhcplistener_single_tenant.nodes.node10.dhcp_fingerprint}} --dhcp-vendor={{.pfdhcplistener_single_tenant.nodes.node10.dhcp_vendor}} --server={{.pfdhcplistener_single_tenant.nodes.node10.dhcp_server}}"

# let node be created in DB
- name: sleep_some_time
  steps:
  - type: sleep
    time_to_sleep: 5

- name: check_node10_creation
  steps:
  - type: pf_api_node_action
    id: '{{.pfdhcplistener_single_tenant.nodes.node10.mac}}'
    assertions:
    - result.pf_api_node_action_json.item.computername ShouldEqual "{{.pfdhcplistener_single_tenant.nodes.node10.hostname}}"
    - result.pf_api_node_action_json.item.dhcp_fingerprint ShouldEqual "{{.pfdhcplistener_single_tenant.nodes.node10.dhcp_fingerprint}}"
    - result.pf_api_node_action_json.item.dhcp_vendor ShouldEqual "{{.pfdhcplistener_single_tenant.nodes.node10.dhcp_vendor}}"

- name: check_node10_ip4log
  steps:
  - type: pf_api_ip4log_open
    id: '{{.pfdhcplistener_single_tenant.nodes.node10.mac}}'
    assertions:
    - result.pf_api_ip4log_open_json.item.ip ShouldEqual "{{.pfdhcplistener_single_tenant.nodes.node10.first_ip}}"
