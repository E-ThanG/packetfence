// to display images directly on GitHub
ifdef::env-github[]
:encoding: UTF-8
:lang: en
:doctype: book
:toc: left
:imagesdir: ../../images
endif::[]

////

    This file is part of the PacketFence project.

    See PacketFence_Installation_Guide.asciidoc
    for authors, copyright and license information.

////


==== Background

In order to provide flexible osquery support, regular vulnerability check and policy compliance, we introduced basic support for FleetDM.
From PacketFence v14.0, you can configure your FleetDM server to report Policy violations and CVE vulnerabilities of managed nodes to PacketFence.


==== Install and Configure FleetDM

Please follow FleetDM's official best practice to organize your FleetDM service:

* FleetDM official website: https://fleetdm.com/
* Documentation: https://fleetdm.com/docs/get-started/why-fleet

NOTE: We assume that you already have a running FleetDM service on your local network or hosted on the cloud.
      And FleetDM service has Internet access to your PacketFence server.

==== Configure PacketFence

* Check *FleetDM Events Handler* role existence. Usually you should already have this role well configured in PacketFence. Go to *Admin UI* -> *Configuration* -> *System Configuration* -> *Admin Access*, in the right panel, check if the row exists.
* Manually create the role if it doesn't exist. Click on *New admin role* button, fill in the pop-up window with name = *FleetDM Event Handler*, Description = *Receives FleetDM events*, actions = *FLEETDM_EVENTS_READ*, then click Save.
* Create a new user from *Admin UI* -> *Users* -> *Create*. Choose a *Username (PID)* and *strong password*, and set Access Level to *FleetDM Event Handler*

==== Configure FleetDM API in PacketFence

NOTE: In order to allow PacketFence to get associated Mac Address of an affected (Policy violation or CVE vulnerabilities) host from FleetDM, PacketFence will make API calls to FleetDM. An endpoint and credential is required.

NOTE: If both *API Token* and *email & password* are specified, PacketFence will *ONLY* use API token to authenticate with FleetDM. So make sure you are using a *Permanent* API Token.

* Configure FleetDM endpoint from *Admin UI* -> *Configuration* -> *System Configuration* -> *FleetDM*.
* Fill in your *FleetDM login email*, *password* OR *FleetDM API Token*, then click Save.
* Your *temporary* API token can be found after you login into FleetDM -> Right top Logged in user icon -> *My Account* -> *Get API Token*
* To create a permanent API Key in FleetDM, please refer to official documents: https://fleetdm.com/docs/using-fleet/fleetctl-cli?utm_medium=fleetui&utm_campaign=get-api-token#using-fleetctl-with-an-api-only-user

image::fleetdm-fleetdm-api-token-in-packetfence.jpg[scaledwidth="100%",alt="FleetDM webhook for Policy Violations"]
image::fleetdm-fleetdm-api-token.jpg[scaledwidth="100%",alt="FleetDM webhook for Policy Violations"]

==== Configure FleetDM

NOTE: We *strongly* recommend you to config FleetDM and PacketFence using a *valid SSL Certificate* instead of a self-signed one to make sure devices can be successful enrolled to FleetDM and Policy Violations or CVEs can be reported to PacketFence as well. Policy violation webhook and CVE webhooks are configured individually in FleetDM admin UI.

===== Policy Violations
* Login to your FleetDM admin Panel -> *Policies* -> *Manage Automations*.
* On the popup window, enable *Policy automations enabled*, workflow: *Webhook*.
* For destionation URL, fill in `https://USER:PASS@packetfence.fqdn:9999/api/v1/fleetdm-events/policy`.
* Replace `USER` and `PASS` with what we used to create the user for FleetDM events Handler in PacketFence, and also `packetfence.fqdn` with the right domain name or IP of PacketFence.

image::fleetdm-webhook-policy.jpg[scaledwidth="100%",alt="FleetDM webhook for Policy Violations"]

===== CVEs
* Login to your FleetDM admin Panel -> *Software* -> *Manage Automations*.
* On the popup window, enable *Vulnerability automations enabled*, workflow: *Webhook*.
* For destionation URL, fill in `https://USER:PASS@packetfence.fqdn:9999/api/v1/fleetdm-events/cve`.
* Replace `USER` and `PASS` with what we used to create the user for FleetDM events Handler in PacketFence, and also `packetfence.fqdn` with the right domain name or IP of PacketFence.

image::fleetdm-webhook-cve.jpg[scaledwidth="100%",alt="FleetDM webhook for CVEs"]

==== Test and validate webhooks

There are several ways to check if webhooks are working. To test it on PacketFence side, you can do the following steps:

* Finish PacketFence and FleetDM configurations.
* Login to your PacketFence node, using `journalctl -f` to watch PacketFence logs. Or you can choose not to use "-f" and search occurrences of webhook calls instead as well.
* Use any tool such as `grep` or built-in search highlights of your terminal application and search / watch for keyword `fleetdm`
* Manually trigger a policy violation or CVE, check if the corresponding webhook API has been called with a 2xx response.
* A successful report will be something like `api-frontend-access xx.xx.xx.xx - - [30/May/2024:12:42:00 -0400] "POST /api/v1/fleetdm-events/policy HTTP/2.0" 2xx xx "-" "Go-http-client/2.0"`
